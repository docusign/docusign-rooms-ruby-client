=begin
#DocuSign Rooms API - v2

#An API for an integrator to access the features of DocuSign Rooms

OpenAPI spec version: v2
Contact: devcenter@docusign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module DocuSign_Rooms


  class ExternalFormFillSessionsApi
    attr_accessor :api_client

    def initialize(api_client = ExternalFormFillSessionsApi.default)
      @api_client = api_client
    end

    # Creates an external form fill session.
    # Returns a URL for a new external form fill session, based on the `roomId` and `formId` or `formIds` that you specify in the `formFillSessionForCreate` request body.  User may supply up to 10 `formIds`. Eventually, `formId` will be deprecated.
    # @param account_id (Required) The globally unique identifier (GUID) for the account.
    # @param body Request body that accepts the `roomId` and `formId` or `formIds` that you specify in the `formFillSessionForCreate` request body. User may supply up to 10 `formIds`. Eventually, `formId` will be deprecated (optional parameter)
    # @return [ExternalFormFillSession]
    def create_external_form_fill_session(account_id, body)
      data, _status_code, _headers = create_external_form_fill_session_with_http_info(account_id,  body)
      return data
    end

    # Creates an external form fill session.
    # Returns a URL for a new external form fill session, based on the &#x60;roomId&#x60; and &#x60;formId&#x60; or &#x60;formIds&#x60; that you specify in the &#x60;formFillSessionForCreate&#x60; request body.  User may supply up to 10 &#x60;formIds&#x60;. Eventually, &#x60;formId&#x60; will be deprecated.
    # @param account_id (Required) The globally unique identifier (GUID) for the account.
    # @param body Request body that accepts the `roomId` and `formId` or `formIds` that you specify in the `formFillSessionForCreate` request body. User may supply up to 10 `formIds`. Eventually, `formId` will be deprecated (optional parameter)
    # @return [Array<(ExternalFormFillSession, Fixnum, Hash)>] ExternalFormFillSession data, response status code and response headers
    def create_external_form_fill_session_with_http_info(account_id, body)
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ExternalFormFillSessionsApi.create_external_form_fill_session ..."
      end
      # verify the required parameter 'account_id' is set
      fail ArgumentError, "Missing the required parameter 'account_id' when calling ExternalFormFillSessionsApi.create_external_form_fill_session" if account_id.nil?
      # resource path
      local_var_path = "/v2/accounts/{accountId}/external_form_fill_sessions".sub('{format}','json').sub('{' + 'accountId' + '}', account_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['text/plain', 'application/json', 'text/json', 'application/xml', 'text/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json', 'application/xml', 'text/xml', 'application/*+xml'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ExternalFormFillSession')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ExternalFormFillSessionsApi#create_external_form_fill_session\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end