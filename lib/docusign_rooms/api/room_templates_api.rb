=begin
#DocuSign Rooms API - v2

#An API for an integrator to access the features of DocuSign Rooms

OpenAPI spec version: v2
Contact: devcenter@docusign.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module DocuSign_Rooms

  class GetRoomTemplatesOptions
    # Get all room templates you have access to for this office. Response includes Company and Region level templates. If onlyAssignable is true, and no officeId is provided, user's default office is assumed.
    attr_accessor :office_id

    # Get list of templates you have access to. Default value false.
    attr_accessor :only_assignable

    # Number of room templates to return. Defaults to the maximum which is 100.
    attr_accessor :count

    # Position of the first item in the total results. Defaults to 0.
    attr_accessor :start_position

    def self.default
      @@default ||= GetRoomTemplatesOptions.new
    end
  end


  class RoomTemplatesApi
    attr_accessor :api_client

    def initialize(api_client = RoomTemplatesApi.default)
      @api_client = api_client
    end

    # Returns all room templates that the active user has access to
    # 
    # @param account_id 
    # @param DocuSign_Rooms::GetRoomTemplatesOptions Options for modifying the behavior of the function.
    # @return [RoomTemplatesSummaryList]
    def get_room_templates(account_id, options = DocuSign_Rooms::GetRoomTemplatesOptions.default)
      data, _status_code, _headers = get_room_templates_with_http_info(account_id, options)
      return data
    end

    # Returns all room templates that the active user has access to
    # 
    # @param account_id 
    # @param DocuSign_Rooms::GetRoomTemplatesOptions Options for modifying the behavior of the function.
    # @return [Array<(RoomTemplatesSummaryList, Fixnum, Hash)>] RoomTemplatesSummaryList data, response status code and response headers
    def get_room_templates_with_http_info(account_id, options = DocuSign_Rooms::GetRoomTemplatesOptions.default)
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: RoomTemplatesApi.get_room_templates ..."
      end
      # verify the required parameter 'account_id' is set
      fail ArgumentError, "Missing the required parameter 'account_id' when calling RoomTemplatesApi.get_room_templates" if account_id.nil?
      # resource path
      local_var_path = "/v2/accounts/{accountId}/room_templates".sub('{format}','json').sub('{' + 'accountId' + '}', account_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'officeId'] = options.office_id if !options.office_id.nil?
      query_params[:'onlyAssignable'] = options.only_assignable if !options.only_assignable.nil?
      query_params[:'count'] = options.count if !options.count.nil?
      query_params[:'startPosition'] = options.start_position if !options.start_position.nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'RoomTemplatesSummaryList')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: RoomTemplatesApi#get_room_templates\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end